# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: SonarCloud Analysis

on:
  push:
    tags: ['*']


jobs:
  sonarcloud:
    name: Upload to SonarCloud
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: Cache redis
        id: cache-redis
        uses: actions/cache@v3
        with:
          path: |
            ~/local/bin/redis-cli
          key: ${{ runner.os }}-redis-cli
      - name: Install redis
        if: steps.cache-redis.outputs.cache-hit != 'true'
        run: |
          curl -O https://download.redis.io/releases/redis-6.2.7.tar.gz
          tar -xzvf redis-6.2.7.tar.gz
          mkdir -p $HOME/local/bin
          pushd redis-6.2.7 && BUILD_TLS=yes make -j$NPROC redis-cli && mv src/redis-cli $HOME/local/bin/ && popd

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'tests/gocase/go.mod'

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Configure Kvrocks
        run: |
          ./x.py build -j$(nproc) --compiler gcc --skip-build
      - name: Install gcovr 5.0
        run: pip install gcovr==5.0 # 5.1 is not supported

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2
        
      - name: Build Kvrocks (SonarCloud)
        run: |
          build-wrapper-linux-x86-64 --out-dir sonarcloud-data ./x.py build -j$NPROC --unittest --compiler gcc -DCMAKE_CXX_FLAGS=--coverage

      - name: Run Unit Test
        run: |
          ulimit -c unlimited
          export LSAN_OPTIONS="suppressions=$(realpath ./tests/lsan-suppressions)"
          export TSAN_OPTIONS="suppressions=$(realpath ./tests/tsan-suppressions)"
          ./x.py test cpp

      - name: Run Go Integration Cases
        run: |
          ulimit -c unlimited
          export LSAN_OPTIONS="suppressions=$(realpath ./tests/lsan-suppressions)"
          export TSAN_OPTIONS="suppressions=$(realpath ./tests/tsan-suppressions)"
          export PATH=$PATH:$HOME/local/bin/
          GOCASE_RUN_ARGS=""
          ./x.py test go build $GOCASE_RUN_ARGS 
      - name: Collect coverage into one XML report
        run: |
          gcovr --sonarqube > sonarcloud-data/coverage.xml
          
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        run: |

          sonar-scanner \
            --define sonar.cfamily.build-wrapper-output="sonarcloud-data" \
            --define sonar.coverageReportPaths=sonarcloud-data/coverage.xml \
            --define sonar.projectKey=jihuayu_kvrocks-test \
            --define sonar.organization=jihuayu \
            --define sonar.scm.revision=${{ github.event.after }} \
            --define sonar.projectVersion=${{ github.ref }}
